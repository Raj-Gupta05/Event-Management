{"ast":null,"code":"import cookie from 'cookie';\nimport { API_URL } from '@/config/index';\nexport default (async (req, res) => {\n  if (req.method === 'POST') {\n    const {\n      username,\n      email,\n      password\n    } = req.body;\n    const strapiRes = await fetch(`${API_URL}/auth/local/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password\n      })\n    });\n    const data = await strapiRes.json();\n\n    if (strapiRes.ok) {\n      // Set Cookie\n      res.setHeader('Set-Cookie', cookie.serialize('token', data.jwt, {\n        httpOnly: true,\n        secure: false,\n        maxAge: 60 * 60 * 24 * 7,\n        // 1 week\n        sameSite: 'strict',\n        path: '/'\n      }));\n      res.status(200).json({\n        user: data.user\n      });\n    } else {\n      res.status(data.statusCode).json({\n        message: data.message[0].messages[0].message\n      });\n    }\n  } else {\n    res.setHeader('Allow', ['POST']);\n    res.status(405).json({\n      message: `Method ${req.method} not allowed`\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/asus/OneDrive/Desktop/web/dj-events-frontend/pages/api/register.js"],"names":["cookie","API_URL","req","res","method","username","email","password","body","strapiRes","fetch","headers","JSON","stringify","data","json","ok","setHeader","serialize","jwt","httpOnly","secure","maxAge","sameSite","path","status","user","statusCode","message","messages"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB,QAAgCL,GAAG,CAACM,IAA1C;AAEA,UAAMC,SAAS,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,sBAAZ,EAAmC;AAC9DG,MAAAA,MAAM,EAAE,MADsD;AAE9DO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFqD;AAK9DH,MAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAe;AACnBR,QAAAA,QADmB;AAEnBC,QAAAA,KAFmB;AAGnBC,QAAAA;AAHmB,OAAf;AALwD,KAAnC,CAA7B;AAYA,UAAMO,IAAI,GAAG,MAAML,SAAS,CAACM,IAAV,EAAnB;;AAEA,QAAIN,SAAS,CAACO,EAAd,EAAkB;AAChB;AACAb,MAAAA,GAAG,CAACc,SAAJ,CACE,YADF,EAEEjB,MAAM,CAACkB,SAAP,CAAiB,OAAjB,EAA0BJ,IAAI,CAACK,GAA/B,EAAoC;AAClCC,QAAAA,QAAQ,EAAE,IADwB;AAElCC,QAAAA,MAAM,OAF4B;AAGlCC,QAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,CAHW;AAGR;AAC1BC,QAAAA,QAAQ,EAAE,QAJwB;AAKlCC,QAAAA,IAAI,EAAE;AAL4B,OAApC,CAFF;AAWArB,MAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AAAEW,QAAAA,IAAI,EAAEZ,IAAI,CAACY;AAAb,OAArB;AACD,KAdD,MAcO;AACLvB,MAAAA,GAAG,CACAsB,MADH,CACUX,IAAI,CAACa,UADf,EAEGZ,IAFH,CAEQ;AAAEa,QAAAA,OAAO,EAAEd,IAAI,CAACc,OAAL,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,CAAzB,EAA4BD;AAAvC,OAFR;AAGD;AACF,GApCD,MAoCO;AACLzB,IAAAA,GAAG,CAACc,SAAJ,CAAc,OAAd,EAAuB,CAAC,MAAD,CAAvB;AACAd,IAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AAAEa,MAAAA,OAAO,EAAG,UAAS1B,GAAG,CAACE,MAAO;AAAhC,KAArB;AACD;AACF,CAzCD","sourcesContent":["import cookie from 'cookie'\r\nimport { API_URL } from '@/config/index'\r\n\r\nexport default async (req, res) => {\r\n  if (req.method === 'POST') {\r\n    const { username, email, password } = req.body\r\n\r\n    const strapiRes = await fetch(`${API_URL}/auth/local/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        email,\r\n        password,\r\n      }),\r\n    })\r\n\r\n    const data = await strapiRes.json()\r\n\r\n    if (strapiRes.ok) {\r\n      // Set Cookie\r\n      res.setHeader(\r\n        'Set-Cookie',\r\n        cookie.serialize('token', data.jwt, {\r\n          httpOnly: true,\r\n          secure: process.env.NODE_ENV !== 'development',\r\n          maxAge: 60 * 60 * 24 * 7, // 1 week\r\n          sameSite: 'strict',\r\n          path: '/',\r\n        })\r\n      )\r\n\r\n      res.status(200).json({ user: data.user })\r\n    } else {\r\n      res\r\n        .status(data.statusCode)\r\n        .json({ message: data.message[0].messages[0].message })\r\n    }\r\n  } else {\r\n    res.setHeader('Allow', ['POST'])\r\n    res.status(405).json({ message: `Method ${req.method} not allowed` })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}